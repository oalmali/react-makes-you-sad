digraph {
  unhappy[
    shape="box",
    style=rounded,
    label="React sizi üzüyor."
  ]
  unhappy -> are_you_using_react_boilerplates;

  # Boilerplate Fatigue

  are_you_using_react_boilerplates[
    shape="diamond",
    label="React'ı taslak projelerden
    kopyalayarak mı öğreniyorsunuz?"
  ]
  are_you_using_react_boilerplates -> boilerplates_dont_teach[label="evet"]
  are_you_using_react_boilerplates -> steal_from_boilerplates[label="hayır"]

  boilerplates_dont_teach[
    shape="box",
    label="React'ı taslak projelerden kopyalayarak
    öğrenmek, yemek pişirmeyi güzel restoranlarda
    yemek yiyerek öğrenmeye benzer ve işe yaramaz.
    Bir şeyleri atlama korkusu olmadan işin temelini
    öğrenmelisiniz. Bu atlama korkusu yersizdir.
    Şunu unutmayın ki insanlar taslak projeleri ne
    bildiklerini göstermek için kullanırlar,
    öğrenmenize yardımcı olmak için değil. Taslak
    projeler usta kullanıcılar tarafından onların
    anlayabileceği düzeyde oluşturulur, ve genelde
    kabullenmek istemedikleri kadar deneyseldir.
    Taslak projeler dikkat çekmek için birbirleriyle
    rekabet halindedir ki bu da gereksizce dolu
    olmalarına sebep olur. Eğer gerçekten React
    öğrenmek istiyorsanız Pete Hunt'ın rehberini
    izleyin: https://github.com/petehunt/react-howto.
    Taslak projelere de kendiniz bir tane yaratıncaya
    kadar bakmayın."
  ]
  boilerplates_dont_teach -> are_you_using_flux

  steal_from_boilerplates[
    shape="box",
    label="Taslak projeler içerdikleri teknolojileri
    öğrenme konusunda iyi olmasalar da, bu teknolojilerin
    nasıl bir araya getirildiklerini görme konusunda
    kullanışlı olabilirler tabi ki siz her birini
    ayrı ayrı iyi öğrendikten *sonra*. Yeni teknolojileri
    keşfetme konusunda harika bir yoldur ama hepsini
    kullanmak zorunda falan hissetmemelisiniz.
    Taslak projelerden tamamen vazgeçmeyin.
    Şunu aklınızdan çıkarmayın, taslak projeler çeşitli
    numaralar içerir ama asla uygulamanız
    için sağlam bir temel oluşturmaz."
  ]
  steal_from_boilerplates -> are_you_using_flux

  # Flux Fatigue

  are_you_using_flux[
    shape="diamond",
    label="Flux (veya Redux)
    kütüphanesini kullanıyor musunuz?"
  ]
  are_you_using_flux -> is_too_much_flux[label="evet"]
  are_you_using_flux -> is_not_enough_flux[label="hayır"]

  is_too_much_flux[
    shape="diamond",
    label="Size çok da şey
    katmayan çok fazla taslak
    kod ekleniyor mu?"
  ]
  is_too_much_flux -> remove_flux[label="evet"]
  is_too_much_flux -> are_you_using_bundler[label="hayır"]

  is_not_enough_flux[
    shape="diamond",
    label="Bileşen hiyerarşinizde içi dolu
    durum içeren bileşenler var ve genelde
    bugların kaynağı burası mı?"
  ]
  is_not_enough_flux -> add_flux[label="evet"]
  is_not_enough_flux -> are_you_using_bundler[label="hayır"]

  add_flux[
    shape="box",
    label="Flux kütüphanesi eklemeyi düşünün.
    Farklı bileşenler arasında paylaşılan
    durumu dışarı çıkarmayı ve tutarlı bir
    şekilde güncellenmesini sağlayabilir."
  ]
  add_flux -> are_you_using_bundler

  remove_flux[
    shape="box",
    label="Flux kütüphanesini çıkarın.
    Resmi döküman olan “Thinking in React”
    makalesini okursanız sadece React ile
    nasıl bir mimari kurabileceğiniz
    konusunda size fikir verebilir."
  ]
  remove_flux -> are_you_using_bundler

  # Bundler Fatigue

  are_you_using_bundler[
    shape="diamond",
    label="Herhangi bir
    Javascript paketleyicisi
    kullanıyor musunuz
    (ör: Webpack, Browserify)?"
  ]
  are_you_using_bundler -> are_you_working_on_production_app_with_bundler[label="evet"]
  are_you_using_bundler -> are_you_working_on_production_app_without_bundler[label="hayır"]

  are_you_working_on_production_app_with_bundler[
    shape="diamond",
    label="Canlı ortamınız
    var mı?"
  ]
  are_you_working_on_production_app_with_bundler -> do_you_know_es2015[label="evet"]
  are_you_working_on_production_app_with_bundler -> remove_bundler[label="hayır"]

  are_you_working_on_production_app_without_bundler[
    shape="diamond",
    label="Canlı ortamınız
    var mı?"
  ]
  are_you_working_on_production_app_without_bundler -> add_bundler[label="evet"]
  are_you_working_on_production_app_without_bundler -> do_you_know_es2015[label="hayır"]

  add_bundler[
    shape="box",
    label="Javascript kodunu verimli sunabilmek
    ve bağımlılıkları yönetebilmek için
    yapım (build) adımı olarak paketleyici
    ekleyin. Ne kadar iyi olduğunuzu ölçmek
    için Google Page Speed ürününü kullanın.
    Kodunuzu ortamlara göre davranır hale
    getirmeyi (envify) ve minimize etmeyi
    unutmayın."
  ]
  add_bundler -> do_you_know_es2015

  remove_bundler[
    shape="box",
    label="Eğer sadece React öğreniyorsanız
    herhangi bir paketleyiciye ihtiyacınız yok.
    Şunu kopyalayın https://github.com/jarsbe/react-simple
    ve yapım adımı olmadan hacklemeye başlayın.
    React kullanmak konusunda yetkin oluncaya ve
    sistem modüllerini, paketleyicileri öğreninceye
    kadar <script> etiketini kullanabilirsiniz."
  ]
  remove_bundler -> do_you_know_es2015

  # ES2015 Fatigue

  do_you_know_es2015[
    shape="diamond",
    label="ES2015 özelliklerini kullanırken
    sorun yaşıyor musunuz?
    (ör: sınıflar ve ok fonksiyonları)?"
  ]
  do_you_know_es2015 -> use_es5[label="hayır"]
  do_you_know_es2015 -> are_you_using_dangerous_features[label="evet"]

  use_es5[
    shape="box",
    label="Şimdilik ES2015 kullanmayın.
    React öğrenmek için kullanmak zorunda değilsiniz.
    Üçüncü-parti kütüphaneleri dökümanlarında ES2015
    sintaksı kullanıyor olsa da React öğrenirken
    üçüncü-parti kütüphanelerini kullanmak zorunda da
    değilsiniz. Javascript bilginizi güncellemek
    gerektiğini hissederseniz,
    https://leanpub.com/understandinges6/read
    harika bir rehberdir. Şurayı http://babeljs.io/repl
    varsayımlarınızı doğrulamak için kullanabilirsiniz."
  ]
  use_es5 -> do_you_update_packages_asap

  # ESnext Fatigue

  are_you_using_dangerous_features[
    shape="diamond",
    label="ES2015 içerisinde yer almayan
    deneysel dil özelliklerini
    kullanıyor musunuz? (ör: dekoratörler)?"
  ]
  are_you_using_dangerous_features -> can_you_spend_days_on_your_tooling[label="evet"]
  are_you_using_dangerous_features -> do_you_update_packages_asap[label="hayır"]

  can_you_spend_days_on_your_tooling[
    shape="diamond",
    label="Buglar, uyumsuzluklar veya
    diğer değişiklikler sebebiyle kullandığınız
    ürünleri düzenlemek zorunda kalıyor musunuz?"
  ]
  can_you_spend_days_on_your_tooling -> do_you_update_packages_asap[label="evet"]
  can_you_spend_days_on_your_tooling -> stick_to_es2015[label="hayır"]

  stick_to_es2015[
    shape="box",
    label="ES2015,
    JSX, obje yayma operatörünü (...)
    kullanmaya devam edin fazlası değil."
  ]
  stick_to_es2015 -> do_you_update_packages_asap

  # Semver Fatigue

  do_you_update_packages_asap[
    shape="diamond",
    label="Bağımlılıklarınızın yeni ve büyük
    güncellemeleri çıkar çıkmaz güncelliyor musunuz?"
  ]
  do_you_update_packages_asap -> give_it_two_months[label="evet"]
  do_you_update_packages_asap -> consider_updating_react[label="hayır"]

  give_it_two_months[
    shape="box",
    label="React'ı bir kenara koyalım çünkü
    her güncelleme öncesi yoğun şekilde test edilir
    ancak diğer paketleri güncellemeden önce bir kez daha
    düşünün. Tabi ki bu yeni versiyonları deneyebilirsiniz
    ama en iyisi insanlar sorunları bulup çözene kadar
    bunları bir kaç aylığına ayrı bir branşta saklayın.
    Bir şeyleri kaçırma korkusuyla karar vermeyin!
    Eski dökümanları incelerken, Github'daki güncellemelerin
    etiketlerini inceleyin ör:
    https://github.com/reactjs/react-router/tree/0.13.x/doc"
  ]
  give_it_two_months -> are_you_still_sad

  consider_updating_react[
    shape="box",
    label="Bu iyi bir şey.
    Ancak React'ın yeni versiyonlarını
    çıkar çıkmaz denemenizi tavsiye
    ederiz (ayrı bir branşta!).
    Topluluk tarafından sunulan paketlerin,
    aksine Facebook'ta yoğun bir şekilde test
    edilir. Güncelleme notlarına göz atmayı
    unutmayın codemod ürünlerine link
    verebilirler böylece kodunuzun bir kısmını
    otomatik yenileyebilirsiniz."
  ]
  consider_updating_react -> are_you_still_sad

  # End

  are_you_still_sad[
    shape="diamond",
    label="Hala üzgün müsünüz?"
  ]
  are_you_still_sad -> rant[label="evet"];
  are_you_still_sad -> happy[label="hayır"];

  rant[
    shape="box",
    label="Karşılaştığınız problemlerle
    ilgili yapıcı bir plog gönderisi yazın.
    Kişisel saldırılara kulak asmayın.
    Nazik olun. İnsanlara çözüm bulma
    konusunda yardımcı olun. Farklı bir
    teknoloji çözümü de düşünebilirsiniz
    (ör: Ember)."
  ]
  rant -> happy

  happy[
    shape="box",
    label="React sizi mutlu ediyor!
    Veya, en azından, bundan sonra üzmeyecektir."
  ]
  happy -> share

  share [
    shape="box",
    style=rounded,
    label="Bu akış şemasını paylaşın: http://bit.ly/react-makes-you-sad.
    Şuradan esinlenilmiştir: https://github.com/petehunt/react-howto."
  ]
}
